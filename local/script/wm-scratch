#!/bin/sh
#
# Toggle show/hide for a window.
#
# Without arguments it will open a new terminal on first innovation, and
# show/hide it on subsequent invocations. Useful for a "scratch" terminal to
# quickly write down some things or whatnot.
#
# If the first argument is set to any non-empty value it will make the currently
# active window the scratch window.
#
# The second argument is the window class name; if this is the default
# ("scratchwin") then it will spawn a terminal if no such window exists,
# otherwise it won't do anything if it can't find the window.
echo " $@" | grep -q -- ' -h' && { sed '1,2d; /^[^#]/q; s/^# \?//;' "$0" | sed '$d'; exit 0; }  # Show docs
set -euC

name=${2:-scratchwin}
scratch=$(xdotool search --classname $name ||:)

if [ -n "${1:-}" ]; then
	if [ -n "$scratch" ]; then
		xdotool set_window --classname '' "$scratch"
		xdotool windowmap "$scratch"
	fi
	xdotool getactivewindow set_window --classname "$name"
	exit 0
fi

if [ -z "$scratch" ]; then
	# Only launch a terminal with the default argument; this allows us to do
	# things like "wm-scratch '' Devtools" to show/hide Firefox devtools if it
	# exists.
	if [ "$name" = 'scratchwin' ]; then
		st -n "$name" -g 80x25-2-2 &
	fi

	# Hack to open Firefox devtools ("K" makes it always start on the console
	# tab, rather than the last active tab like with "I" or F12).
	#
	# Should probably add some arguments for this:
	#
	#    wm-scratch toggle scratchwin "st -n scratchwin -g 80x25-2-2"
	#    wm-scratch toggle Devtools   "xdotool search --classname 'Navigator' key 'Control_L+Shift_L+K'"
	#    wm-scratch set-active
	if [ "$name" = 'Devtools' ]; then
		xdotool search --classname 'Navigator' key 'Control_L+Shift_L+K' &
	fi

	exit 0
fi

c=windowmap
if xdotool search --onlyvisible "$name" >/dev/null 2>&1; then
	c=windowunmap
fi
xdotool "$c" "$scratch"
