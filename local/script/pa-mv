#!/bin/sh
#
# Move application to different pulseaudio sink.
echo " $@" | grep -q -- ' -h' && { sed '1,2d; /^[^#]/q; s/^# \?//;' "$0" | sed '$d'; exit 0; }  # Show docs
set -euC

# No arguments: list sinks and inputs.
if [ -z "${1:-}" ]; then
	pactl list sinks |
		grep -E '(^Sink|Description:)' |
		cut -d ':' -f2- |
		sed 's/^\s\+/    /' |
		sed -E 's/#([0-9]+)/\x1b[91;1m\1\x1b[0m/'
	echo

	pactl list sink-inputs |
		grep -E '(^Sink|application.name =|Sink:)' |
		cut -d= -f2 |
		sed 's/^\s\+/    /' |
		sed -E 's/Sink: ([0-9]+)/Sink: \x1b[91;1m\1\x1b[0m/'
	echo

	echo 'Move PulseAudio inputs to a different output ("sink"):'
	echo "  ${0##*/} [input] to move to the next sink (wraps around)."
	echo "  ${0##*/} [input] [sink] to move to a specific sink."
# One argument: move input to next sink.
elif [ -z "${2:-}" ]; then
	cur="$(pactl list short sink-inputs | grep "^$1" | awk '{print $2}')"
	if [ -z "$cur" ]; then
		>&2 echo "${0##*/}: no suck input: $1"
		exit 1
	fi
	sinks=$(pactl list short sinks | awk '{print $1}')

	use=0
	for s in $sinks; do
		[ "$use" -eq 1 ] && exec $0 $1 $s
		[ "$s" = "$cur" ] && use=1
	done
	[ "$use" -eq 1 ] && exec $0 $1 "$(echo "$sinks" | head -n1)"

	>&2 echo "${0##*/}: only one sink?"
	exit 1
# Two arguments: move specific input to specific sink.
elif [ -z "${3:-}" ]; then
	pactl move-sink-input "$1" "$2"
else
	>&2 echo "${0##*/}: that's wrong; try again"
	exec $0
fi
