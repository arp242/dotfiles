#!/bin/sh
#
# Control the volume.
# Works with Pulseaudio and ALSA.
#
# Usage:
#
#   wm-volume           Display current volume.
#   wm-volume print     Idem
#   wm-volume up        Raise volume 5%
#   wm-volume down      Lower volume 5%
#   wm-volume mute      Mute volume
#   wm-volume micmute   Mute microphone
#
# This will adjust the volume for all active outputs, or the first one if
# nothing is active.
#
# TODO: Add volume for input too. Maybe as a new "wm-microphone"?
echo " $@" | grep -q -- ' -h' && { sed '1,2d; /^[^#]/q; s/^# \?//;' "$0" | sed '$d'; exit 0; }  # Show docs

# Pulseaudio
if command -v pactl >/dev/null; then
	tab=$(printf '\t')

	# Get the currently active/connected sink, or the first one.
	sink=$(pactl list sinks short | grep RUNNING | head -n1)
	src=$(pactl list sources short | grep RUNNING | head -n1)
	[ -z "$sink" ] && sink=$(pactl list sinks short | head -n1)
	[ -z "$src" ]  && src=$(pactl list sources short | head -n1)
	sink=${sink%%${tab}*}
	src=${src%%${tab}*}

	case "$1" in
		# This looks a bit crap, but parsing it is hard. pactl is a bit crap.
		""|print)  (pactl list sinks && pactl list sources) | grep -E "^(Sink|Source|$tab(State|Name|Volume|Mute):)" ;;
		up)        pactl set-sink-volume "$sink" +5%    ;;
		down)      pactl set-sink-volume "$sink" -5%    ;;
		mute)      pactl set-sink-mute   "$sink" toggle ;;
		micmute)   pactl set-source-mute "$src"  toggle ;; 
		*)
			echo "Unsupported: \"$1\""
			exit 1
	esac
# ALSA
elif command -v amixer >/dev/null; then
	# TODO: detect active?
	case "$1" in
		""|print)  amixer -c1  sget Master         ;;
		up)        amixer -qc1 sset Master 5%+     ;;
		down)      amixer -qc1 sset Master 5%-     ;;
		mute)      amixer -qc1 sset Master  toggle ;;
		micmute)   amixer -qc1 sset Capture toggle ;;
	esac
else
	echo >&2 'wm-brightness: pactl or amixer not found'
	exit 1
fi
